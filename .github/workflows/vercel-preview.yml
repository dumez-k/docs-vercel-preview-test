name: Deploy Vercel Preview
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

on:
  push:
    branches-ignore:
      - main
  workflow_dispatch:

jobs:
  deploy-vercel-preview:
    name: Deploy vercel preview
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Install Vercel CLI
        run: yarn global add vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}
#
#
#
#      - uses: actions/setup-node@v2
#        with:
#          node-version: "14"
#      - uses: actions/setup-node@v2
#        with:
#          node-version: '${{ steps.nvm.outputs.NVMRC }}'
#      - name: Get yarn cache directory path
#        id: yarn-cache-dir-path
#        run: echo "::set-output name=dir::$(yarn cache dir)"
#      - name: Cache yarn cache
#        uses: actions/cache@v3.0.7
#        id: cache-yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
#        with:
#          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
#          key: ${{ runner.os }}-${{ steps.nvm.ouputs.NVMRC }}-yarn-${{ hashFiles('**/yarn.lock') }}
#          restore-keys: |
#            ${{ runner.os }}-${{ steps.nvm.ouputs.NVMRC }}-yarn-${{ hashFiles('**/yarn.lock') }}
#            ${{ runner.os }}-${{ steps.nvm.ouputs.NVMRC }}-yarn-
#      - name: Cache node_modules
#        id: cache-node-modules
#        uses: actions/cache@v2
#        with:
#          path: node_modules
#          key: ${{ runner.os }}-${{ steps.nvm.ouputs.NVMRC }}-nodemodules-${{ hashFiles('**/yarn.lock') }}
#          restore-keys: |
#            ${{ runner.os }}-${{ steps.nvm.ouputs.NVMRC }}-nodemodules-${{ hashFiles('**/yarn.lock') }}
#            ${{ runner.os }}-${{ steps.nvm.ouputs.NVMRC }}-nodemodules-
#      - name: Authenticate with NPM_TOKEN for private NPM packages
#        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc
#      - run: yarn
#        if: |
#          steps.cache-yarn-cache.outputs.cache-hit != 'true' ||
#          steps.cache-node-modules.outputs.cache-hit != 'true'
#      - name: Check TypeScript integrity
#        run: yarn typecheck
#      - name: Check .js and .ts code
#        run: yarn lint-check
#      - name: Run uvu tests
#        run: yarn uvu-test
